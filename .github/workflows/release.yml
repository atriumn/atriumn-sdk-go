name: Release Package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.13.0)'
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Configure Git for GitHub Packages
        run: |
          git config --global url."https://${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"
          echo "GOPROXY=proxy.golang.org,direct" >> $GITHUB_ENV
          echo "GOSUMDB=sum.golang.org" >> $GITHUB_ENV

      - name: Set version from tag or input
        id: version
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          fi

      - name: Run tests
        run: go test ./...

      - name: Tag version if workflow_dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          if ! git ls-remote --tags origin | grep -q "refs/tags/${{ steps.version.outputs.version }}$"; then
            git tag ${{ steps.version.outputs.version }}
            git push origin ${{ steps.version.outputs.version }}
          else
            echo "Tag ${{ steps.version.outputs.version }} already exists, skipping tag creation"
          fi

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false